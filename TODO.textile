h1. TODOs / ideas for next releases

* document TransformationConfiguration and put a page about inheritance in the docs
* decorate com.google.code.morphia.Key class with "fetch()" method, that retrieves entity from db and autowires it
* rethink countAll - drop it, make count() do the work
* figure out some tests for inheritance scenarios
* Make conversions between List and MorphiaIterator more convenient
* add a refresh method to instances, to pull current data from db again
* process belongsTo and hasMany properties (via AST)
* use "GMongo":http://blog.paulopoiati.com/2010/06/20/gmongo-0-5-released/ as driver wrapper (optional, can be turned of in configuration. morphia will still use the undecorated mongo-driver)
* check out "GORM Redis":http://grails.org/plugin/redis plugin and the "inconsequential":http://github.com/grails/inconsequential implementation and derive some best practices
* add WriteConcern to methods, where applicable
* add option to drop database on startup (dbCreate = "create-drop" // one of 'create', 'create-drop','update' see http://grails.org/doc/1.3.x/guide/3.%20Configuration.html#3.3%20The%20DataSource)
* map Datastore methods onto Domain classes (as static and instance methods) - updateFirst, findAndUpdate
* Add test for index definition syntax
* document converter abilities
* save method: add support for failOnError:true in grails 1.2 (GRAILS-4343)
* no ast transformation for abstract classes. find a way to mark classes that should not be transformed
* implement GridFS access
* implement getAll http://grails.org/doc/1.3.x/ref/Domain%20Classes/getAll.html
* contains and remove does not work on referenced collections -> because collections that use hashCode for comparison compare hashcodes and are not using equals

h1. NOTES

h2. Classes in grails-app/domain directory

* Validation methods are injected by Grails
* id and version properties are injected by Grails
